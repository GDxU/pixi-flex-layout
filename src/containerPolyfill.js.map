{"version":3,"file":"containerPolyfill.js","sourceRoot":"","sources":["containerPolyfill.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"../global.d.ts\" />\nimport {YogaLayout} from \"./YogaLayout\";\nimport {Container} from \"@pixi/display\";\n\ninterface IContainer {\n    /**\n     * True to enable flex for direct children. See also: flexRecursive\n     */\n    flex: boolean;\n    /**\n     * True to enable flex for ALL children. See also: flex\n     */\n    flexRecursive: boolean;\n}\n\ninterface IDisplayObject {\n    _yogaLayoutHash: number;\n    _prevYogaLayoutHash: number;\n    __yoga: YogaLayout;\n    yoga: YogaLayout;\n    /**\n     * Internal property for fast checking if object has yoga\n     */\n    __hasYoga: boolean;\n\n    /**\n     * Applies yoga layout to DisplayObject\n     */\n    updateYogaLayout(): void;\n\n    /**\n     * Checks boundaries of DisplayObject and emits NEED_LAYOUT_UPDATE if needed\n     */\n    checkIfBoundingBoxChanged(): void;\n}\n\n\nexport function applyContainerPolyfill(container_pixi: any) {\n    if (!container_pixi) {\n        console.log(\"@pixi/apply: mixin was called with empty parameter. Are you sure that?\")\n        return\n    }\n    const ContainerProto = container_pixi.prototype as (Container & Partial<IContainer> & Partial<IDisplayObject>)\n    Object.defineProperty(ContainerProto, \"flex\", {\n        get(): boolean {\n            return this.__flex;\n        },\n        set(newFlex: boolean): void {\n            if (!this.flex && newFlex) {\n                this.children.forEach(child => {\n                    this.yoga.addChild(child.yoga);\n                    if (this.flexRecursive && child.hasOwnProperty(\"flex\") && child.flex === true) {\n                        child.flexRecursive = true;\n                    }\n                });\n                this.emit(YogaLayout.NEED_LAYOUT_UPDATE);\n            }\n\n            if (this.flex && !newFlex) {\n                this.children.forEach(child => {\n                    this.yoga.removeChild(child.yoga);\n                });\n            }\n            this.__flex = newFlex;\n        }\n    });\n\n    Object.defineProperty(ContainerProto, \"flexRecursive\", {\n        get(): boolean {\n            return this.__flexRecursive;\n        },\n        set(newFlex: boolean): void {\n            this.__flexRecursive = newFlex;\n            this.flex = newFlex;\n        }\n    });\n\n    const addChild = ContainerProto.addChild;\n    const removeChildren = ContainerProto.removeChildren;\n    const addChildAt = ContainerProto.addChildAt;\n    const removeChild = ContainerProto.removeChild;\n    const containerUpdateTransform = ContainerProto.updateTransform;\n\n    ContainerProto.addChild = function (...children) {\n        if (children.length === 1) {\n            const child = children[0] as Partial<IDisplayObject> & Partial<IContainer>;\n            if (this.flex === true) {\n                child.yoga = child.yoga || new YogaLayout(child);\n                child.__hasYoga = true;\n                this.yoga.addChild(child.yoga);\n            }\n\n            if (this.flexRecursive && child.hasOwnProperty(\"flex\") && child.flex !== false) {\n                child.flexRecursive = true;\n            }\n            this.emit(YogaLayout.NEED_LAYOUT_UPDATE);\n        }\n        return addChild.call(this, ...children) as any;\n    }\n\n\n    ContainerProto.addChildAt = function (child: IDisplayObject | IContainer | any, index: number | any) {\n\n        if (child.hasOwnProperty(\"flex\") && this.flex === true) {\n            child.yoga = child.yoga || new YogaLayout(child);\n            this.__hasYoga = true;\n            this.yoga.addChild(child.yoga, index);\n        }\n\n        if (child.hasOwnProperty(\"flexRecursive\") && this.flexRecursive && child.hasOwnProperty(\"flex\") && child.flex !== false) {\n            child.flexRecursive = true;\n        }\n        this.emit(YogaLayout.NEED_LAYOUT_UPDATE);\n        return addChildAt.call(this, child, index) as any;\n    }\n\n\n    ContainerProto.removeChild = function (...children) {\n        if (children.length === 1) {\n            const child = children[0] as any | IDisplayObject | IContainer;\n            if (this.flex) {\n                this.yoga.removeChild(child.yoga);\n            }\n            this.emit(YogaLayout.NEED_LAYOUT_UPDATE);\n        }\n        return removeChild.call(this, ...children) as any;\n    }\n\n    ContainerProto.removeChildren = function (beginIndex, endIndex) {\n        if (this.__hasYoga) {\n            const begin = beginIndex || 0;\n            const end = typeof endIndex === 'number' ? endIndex : this.children.length;\n            const range = end - begin;\n\n            if (range > 0 && range <= end) {\n                const removed = (this.children as any | IDisplayObject[] | IContainer[]).slice(begin, range);\n                removed.forEach(child => child.__hasYoga && this.yoga.removeChild(child.yoga))\n            }\n            this.emit(YogaLayout.NEED_LAYOUT_UPDATE);\n        }\n        return removeChildren.call(this, beginIndex, endIndex) as any;\n    }\n\n\n    ContainerProto.updateTransform = function () {\n        if (this.__hasYoga && this.__yoga.isRoot && YogaLayout.isRendering) {\n            this.checkIfBoundingBoxChanged();\n            this.updateYogaLayout();\n        }\n\n        return containerUpdateTransform.call(this)\n    }\n}\n"]}