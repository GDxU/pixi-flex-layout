{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAI,MAAM,SAAS,CAAC;AAChC,OAAO,EAAC,sBAAsB,EAAC,MAAM,qBAAqB,CAAC;AAC3D,OAAO,EAAC,0BAA0B,EAAC,MAAM,yBAAyB,CAAC;AACnE,OAAO,EAAC,oBAAoB,EAAC,MAAM,wBAAwB,CAAC;AAC5D,OAAO,EAAC,UAAU,EAAC,MAAM,cAAc,CAAC;AAExC,IAAI,CAAO,MAAO,CAAC,IAAI,EAAE;IACf,MAAO,CAAC,IAAI,GAAG,IAAI,CAAC;CAC7B;AAED,OAAO,EAAC,UAAU,EAAuB,MAAM,cAAc,CAAC;AAE9D,cAAc,gBAAgB,CAAC;AAY/B,MAAM,UAAU,oBAAoB,CAAC,UAA8B,EAAC,mBAAmB,EAAE,IAAI,EAAC;IAC1F,0BAA0B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC/C,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,IAAI,OAAO,CAAC,mBAAmB,EAAE;QAC7B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KACvE;AACL,CAAC;AAQD,MAAM,UAAU,eAAe,CAAC,QAA+B;IAC3D,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,WAAW,GAAG,IAAI,CAAC,CAAA;IAC7D,QAAQ,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC,CAAA;AACnE,CAAC","sourcesContent":["import * as PIXI from \"pixi.js\";\nimport {applyContainerPolyfill} from \"./containerPolyfill\";\nimport {applyDisplayObjectPolyfill} from \"./displayObjectPolyfill\";\nimport {yogaAnimationManager} from \"./YogaAnimationManager\";\nimport {YogaLayout} from \"./YogaLayout\";\n\nif (!(<any>window).PIXI) {\n    (<any>window).PIXI = PIXI;\n}\n\nexport {YogaLayout, IYogaAnimationConfig} from \"./YogaLayout\";\nexport {YogaLayoutConfig} from \"./YogaLayoutConfig\";\nexport * from \"./YogaContants\";\n\nexport interface IFlexLayoutOptions {\n    usePixiSharedTicker: boolean;\n}\n\n\n/**\n * Polyfills PIXI.DisplayObject and PIXI.Container\n *\n * @param options\n */\nexport function initializeYogaLayout(options: IFlexLayoutOptions = {usePixiSharedTicker: true}) {\n    applyDisplayObjectPolyfill(PIXI.DisplayObject);\n    applyContainerPolyfill(PIXI.Container);\n    if (options.usePixiSharedTicker) {\n        PIXI.Ticker.shared.add(delta => yogaAnimationManager.update(delta));\n    }\n}\n\n\n/**\n * Can be used to optimize Yoga update calls.\n * If renderer is set yoga boundBoxCheck/layotutUpdate in updateTransform will be called ONLY when rendering.\n * @param renderer\n */\nexport function yogaSetRenderer(renderer: PIXI.AbstractRenderer) {\n    renderer.on(\"prerender\", () => YogaLayout.isRendering = true)\n    renderer.on(\"postrender\", () => YogaLayout.isRendering = false)\n}\n"]}