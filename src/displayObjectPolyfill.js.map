{"version":3,"file":"displayObjectPolyfill.js","sourceRoot":"","sources":["displayObjectPolyfill.ts"],"names":[],"mappings":"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","sourcesContent":["import * as PIXI from \"pixi.js\"\nimport {DisplayObject} from \"@pixi/display\";\nimport {Transform} from \"@pixi/math\"\nimport {YogaLayout} from \"./YogaLayout\";\n\n\nconst NineSlicePlane = (<any>PIXI).NineSlicePlane || (<any>PIXI).mesh.NineSlicePlane;\n\ninterface IDisplayObject {\n    _yogaLayoutHash: number;\n    _prevYogaLayoutHash: number;\n    __yoga: YogaLayout;\n    yoga: YogaLayout;\n    /**\n     * Internal property for fast checking if object has yoga\n     */\n    __hasYoga: boolean;\n    _visible: boolean;\n\n    /**\n     * Applies yoga layout to DisplayObject\n     */\n    updateYogaLayout(): void;\n\n    /**\n     * Checks boundaries of DisplayObject and emits NEED_LAYOUT_UPDATE if needed\n     */\n    checkIfBoundingBoxChanged(): void;\n}\n\n\nexport function applyDisplayObjectPolyfill(prototype: any) {\n    if (!prototype) {\n        console.log(\"@pixi/apply: mixin was called with empty parameter. Are you sure that?\")\n        return\n    }\n    const displayObjectProto = prototype.prototype as any & DisplayObject & Partial<IDisplayObject>\n\n    Object.defineProperty(displayObjectProto, \"yoga\", {\n        get(): boolean {\n            if (!this.__yoga) {\n                this.__yoga = new YogaLayout(this);\n                this.__hasYoga = true;\n            }\n            return this.__yoga;\n        },\n        set(v: any): void {\n            this.__yoga = v;\n        }\n    });\n\n    Object.defineProperty(displayObjectProto, \"visible\", {\n        get(): boolean {\n            return this._visible;\n        },\n        set(v: any): void {\n            if (this.__hasYoga && this._visible !== v) {\n                this.__yoga.display = v ? \"flex\" : \"none\";\n            }\n            this._visible = v;\n        }\n    });\n\n    const destroy = displayObjectProto.destroy;\n    displayObjectProto.destroy = function () {\n        if (this.__hasYoga) {\n            this.yoga.children = [];\n            this.yoga.node.free();\n            this.yoga.parent = undefined;\n            this.__hasYoga = false;\n            delete this.yoga;\n        }\n        destroy.call(this);\n    }\n\n    displayObjectProto.checkIfBoundingBoxChanged = function () {\n        if ((this as any).updateText) {\n            (this as any).updateText(true);\n        }\n\n        for (let i = 0, j = this.__yoga.children.length; i < j; i++) {\n            if (this.__yoga.children[i].target.visible) {\n                this.__yoga.children[i].target.checkIfBoundingBoxChanged();\n            }\n        }\n\n        const texture: PIXI.Texture = (this as any)._texture;\n        const bounds = (this as any)._bounds;\n\n        if (texture) {\n            let tw = Math.abs(this.__yoga.rescaleToYoga ? 1 : this.scale.x) * texture.orig.width;\n            let th = Math.abs(this.__yoga.rescaleToYoga ? 1 : this.scale.y) * texture.orig.height;\n\n            if (!this.__yoga.rescaleToYoga && (<any>this).updateHorizontalVertices /* Is NineSlicePlane?*/) {\n                tw = (<any>this).width;\n                th = (<any>this).height;\n            } else if (this.__yoga.rescaleToYoga && this.__yoga.keepAspectRatio) {\n                this.__yoga.aspectRatio = texture.orig.width / texture.orig.height;\n            }\n\n            this._yogaLayoutHash = tw * 0.12498 + th * 4121;\n            if (this._yogaLayoutHash !== this._prevYogaLayoutHash) {\n                (<any>this.__yoga)._width === \"pixi\" && this.__yoga.node.setWidth(tw);\n                (<any>this.__yoga)._height === \"pixi\" && this.__yoga.node.setHeight(th);\n                this.emit(YogaLayout.NEED_LAYOUT_UPDATE);\n            }\n\n            this._prevYogaLayoutHash = this._yogaLayoutHash;\n\n        } else if (bounds) {\n            this._yogaLayoutHash = -1000000;\n\n            if ((<any>this.__yoga)._width === \"pixi\") {\n                let w = Math.round(bounds.maxX - bounds.minX);\n                this.__yoga.node.setWidth(w);\n                this._yogaLayoutHash += w * 0.2343;\n            }\n\n            if ((<any>this.__yoga)._height === \"pixi\") {\n                let h = Math.round(bounds.maxY - bounds.minY);\n                this.__yoga.node.setHeight(h);\n                this._yogaLayoutHash += h * 5121;\n            }\n\n            if (this._yogaLayoutHash !== -1000000 && this._yogaLayoutHash !== this._prevYogaLayoutHash) {\n                this.emit(YogaLayout.NEED_LAYOUT_UPDATE);\n            }\n            this._prevYogaLayoutHash = this._yogaLayoutHash;\n        }\n    }\n\n    displayObjectProto.updateYogaLayout = function () {\n        this.__yoga.update();\n        const updated = this.__yoga.willLayoutWillBeRecomputed();\n        const layout = this.__yoga.getComputedLayout();\n\n        if (updated || this.__yoga.animationConfig || this.__yoga.rescaleToYoga) {\n            (this.transform as Transform).position.set(layout.left, layout.top)\n\n            if (this.__yoga.rescaleToYoga) {\n                if (this.__yoga.keepAspectRatio && !isNaN((<any>this.__yoga)._height)) {\n                    this.scale.set(layout.height / (<any>this.__yoga)._height);\n                } else {\n                    (<any>this).width = layout.width;\n                    (<any>this).height = layout.height;\n                }\n            }\n\n            if (updated) {\n                this.emit(YogaLayout.AFTER_LAYOUT_UPDATED_EVENT, layout)\n            }\n        }\n\n        for (let i = 0, j = this.__yoga.children.length; i < j; i++) {\n            if (this.__yoga.children[i].target.visible) {\n                this.__yoga.children[i].target.updateYogaLayout()\n            }\n        }\n    }\n}\n"]}