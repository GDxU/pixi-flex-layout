{"version":3,"file":"YogaAnimationManager.js","sourceRoot":"","sources":["YogaAnimationManager.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,oBAAoB;IAAjC;QAEW,eAAU,GAAsB,EAAE,CAAC;IAgC9C,CAAC;IA9BU,MAAM,CAAC,KAAa;QACvB,KAAK,IAAI,IAAI,CAAA;QACb,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;YAChC,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC;YACtB,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAGrD,IAAI,QAAQ,GAAG,CAAC,EAAE;gBACd,QAAQ,GAAG,CAAC,CAAC;gBACb,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACvB;YACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;YAC5D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;SAE/D;QAGD,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACrB;IACL,CAAC;IAEM,GAAG,CAAC,IAAqB;QAC5B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAEM,MAAM,CAAC,IAAqB;QAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC;CACJ;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAG,IAAI,oBAAoB,EAAE,CAAC","sourcesContent":["import { IAnimationState } from \"./YogaLayout\";\n\nexport class YogaAnimationManager {\n\n    public animations: IAnimationState[] = [];\n\n    public update(delta: number): void {\n        delta *= 16.6\n        const toDelete = [];\n        for (const anim of this.animations) {\n            anim.elapsed += delta;\n            let progress = anim.easing(anim.elapsed / anim.time);\n\n\n            if (progress > 1) {\n                progress = 1;\n                toDelete.push(anim);\n            }\n            anim.curX = anim.fromX + (anim.toX - anim.fromX) * progress;\n            anim.curY = anim.fromY + (anim.toY - anim.fromY) * progress;\n\n        }\n\n\n        for (const anim of toDelete) {\n            this.remove(anim);\n        }\n    }\n\n    public add(anim: IAnimationState) {\n        this.animations.push(anim);\n    }\n\n    public remove(anim: IAnimationState) {\n        this.animations.splice(this.animations.indexOf(anim), 1);\n    }\n}\n\nexport const yogaAnimationManager = new YogaAnimationManager();\n"]}